{"version":3,"names":["useAnimationHeader","maxHeaderHeight","minHeaderHeight","onScroll","floating","heightAnim","useRef","Animated","Value","current","offset","Platform","OS","headerTop","useMemo","diffClamp","multiply","interpolate","inputRange","outputRange","extrapolate","contentInset","top","contentOffset","x","y","handleScroll","useCallback","event","nativeEvent","useNativeDriver","listener","offsetY","extractOffset"],"sources":["useAnimationHeader.ts"],"sourcesContent":["import { useCallback, useMemo, useRef } from 'react';\nimport {\n  Animated,\n  NativeScrollEvent,\n  NativeSyntheticEvent,\n  Platform,\n} from 'react-native';\n\nexport type Params = {\n  maxHeaderHeight: number;\n  minHeaderHeight: number;\n  onScroll?: (event: NativeSyntheticEvent<NativeScrollEvent>) => void;\n  floating?: boolean;\n};\n\nexport const useAnimationHeader = ({\n  maxHeaderHeight,\n  minHeaderHeight,\n  onScroll,\n  floating = false,\n}: Params) => {\n  const heightAnim = useRef(new Animated.Value(0)).current;\n  const offset = Platform.OS === 'ios' ? maxHeaderHeight : 0;\n\n  const headerTop = useMemo(() => {\n    if (floating) {\n      return Animated.diffClamp(\n        Animated.multiply(heightAnim, -1),\n        minHeaderHeight - maxHeaderHeight,\n        0\n      );\n    }\n\n    return heightAnim.interpolate({\n      inputRange: [-offset, maxHeaderHeight - minHeaderHeight - offset],\n      outputRange: [0, -(maxHeaderHeight - minHeaderHeight)],\n      extrapolate: 'clamp',\n    });\n  }, [floating, offset, maxHeaderHeight, minHeaderHeight, heightAnim]);\n\n  const contentInset = useMemo(\n    () => ({ top: maxHeaderHeight }),\n    [maxHeaderHeight]\n  );\n  const contentOffset = useMemo(\n    () => ({\n      x: 0,\n      y: -offset,\n    }),\n    [offset]\n  );\n\n  const handleScroll = useCallback(\n    (event: NativeSyntheticEvent<NativeScrollEvent>) => {\n      Animated.event([{ nativeEvent: { contentOffset: { y: heightAnim } } }], {\n        useNativeDriver: false,\n        listener: (event: NativeSyntheticEvent<NativeScrollEvent>) => {\n          if (floating) {\n            const offsetY = event.nativeEvent.contentOffset.y;\n            if (offsetY < -maxHeaderHeight) {\n              heightAnim.extractOffset();\n            }\n          }\n        },\n      })(event);\n\n      onScroll?.(event);\n    },\n    [onScroll, heightAnim, maxHeaderHeight, floating]\n  );\n\n  return {\n    headerTop,\n    contentInset,\n    contentOffset,\n    handleScroll,\n  };\n};\n"],"mappings":";;;;;;;AAAA;;AACA;;AAcO,MAAMA,kBAAkB,GAAG,QAKpB;EAAA,IALqB;IACjCC,eADiC;IAEjCC,eAFiC;IAGjCC,QAHiC;IAIjCC,QAAQ,GAAG;EAJsB,CAKrB;EACZ,MAAMC,UAAU,GAAG,IAAAC,aAAA,EAAO,IAAIC,qBAAA,CAASC,KAAb,CAAmB,CAAnB,CAAP,EAA8BC,OAAjD;EACA,MAAMC,MAAM,GAAGC,qBAAA,CAASC,EAAT,KAAgB,KAAhB,GAAwBX,eAAxB,GAA0C,CAAzD;EAEA,MAAMY,SAAS,GAAG,IAAAC,cAAA,EAAQ,MAAM;IAC9B,IAAIV,QAAJ,EAAc;MACZ,OAAOG,qBAAA,CAASQ,SAAT,CACLR,qBAAA,CAASS,QAAT,CAAkBX,UAAlB,EAA8B,CAAC,CAA/B,CADK,EAELH,eAAe,GAAGD,eAFb,EAGL,CAHK,CAAP;IAKD;;IAED,OAAOI,UAAU,CAACY,WAAX,CAAuB;MAC5BC,UAAU,EAAE,CAAC,CAACR,MAAF,EAAUT,eAAe,GAAGC,eAAlB,GAAoCQ,MAA9C,CADgB;MAE5BS,WAAW,EAAE,CAAC,CAAD,EAAI,EAAElB,eAAe,GAAGC,eAApB,CAAJ,CAFe;MAG5BkB,WAAW,EAAE;IAHe,CAAvB,CAAP;EAKD,CAdiB,EAcf,CAAChB,QAAD,EAAWM,MAAX,EAAmBT,eAAnB,EAAoCC,eAApC,EAAqDG,UAArD,CAde,CAAlB;EAgBA,MAAMgB,YAAY,GAAG,IAAAP,cAAA,EACnB,OAAO;IAAEQ,GAAG,EAAErB;EAAP,CAAP,CADmB,EAEnB,CAACA,eAAD,CAFmB,CAArB;EAIA,MAAMsB,aAAa,GAAG,IAAAT,cAAA,EACpB,OAAO;IACLU,CAAC,EAAE,CADE;IAELC,CAAC,EAAE,CAACf;EAFC,CAAP,CADoB,EAKpB,CAACA,MAAD,CALoB,CAAtB;EAQA,MAAMgB,YAAY,GAAG,IAAAC,kBAAA,EAClBC,KAAD,IAAoD;IAClDrB,qBAAA,CAASqB,KAAT,CAAe,CAAC;MAAEC,WAAW,EAAE;QAAEN,aAAa,EAAE;UAAEE,CAAC,EAAEpB;QAAL;MAAjB;IAAf,CAAD,CAAf,EAAwE;MACtEyB,eAAe,EAAE,KADqD;MAEtEC,QAAQ,EAAGH,KAAD,IAAoD;QAC5D,IAAIxB,QAAJ,EAAc;UACZ,MAAM4B,OAAO,GAAGJ,KAAK,CAACC,WAAN,CAAkBN,aAAlB,CAAgCE,CAAhD;;UACA,IAAIO,OAAO,GAAG,CAAC/B,eAAf,EAAgC;YAC9BI,UAAU,CAAC4B,aAAX;UACD;QACF;MACF;IATqE,CAAxE,EAUGL,KAVH;;IAYAzB,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAGyB,KAAH,CAAR;EACD,CAfkB,EAgBnB,CAACzB,QAAD,EAAWE,UAAX,EAAuBJ,eAAvB,EAAwCG,QAAxC,CAhBmB,CAArB;EAmBA,OAAO;IACLS,SADK;IAELQ,YAFK;IAGLE,aAHK;IAILG;EAJK,CAAP;AAMD,CA9DM"}