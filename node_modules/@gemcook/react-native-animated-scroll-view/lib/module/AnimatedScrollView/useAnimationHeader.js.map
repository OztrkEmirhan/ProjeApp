{"version":3,"names":["useCallback","useMemo","useRef","Animated","Platform","useAnimationHeader","maxHeaderHeight","minHeaderHeight","onScroll","floating","heightAnim","Value","current","offset","OS","headerTop","diffClamp","multiply","interpolate","inputRange","outputRange","extrapolate","contentInset","top","contentOffset","x","y","handleScroll","event","nativeEvent","useNativeDriver","listener","offsetY","extractOffset"],"sources":["useAnimationHeader.ts"],"sourcesContent":["import { useCallback, useMemo, useRef } from 'react';\nimport {\n  Animated,\n  NativeScrollEvent,\n  NativeSyntheticEvent,\n  Platform,\n} from 'react-native';\n\nexport type Params = {\n  maxHeaderHeight: number;\n  minHeaderHeight: number;\n  onScroll?: (event: NativeSyntheticEvent<NativeScrollEvent>) => void;\n  floating?: boolean;\n};\n\nexport const useAnimationHeader = ({\n  maxHeaderHeight,\n  minHeaderHeight,\n  onScroll,\n  floating = false,\n}: Params) => {\n  const heightAnim = useRef(new Animated.Value(0)).current;\n  const offset = Platform.OS === 'ios' ? maxHeaderHeight : 0;\n\n  const headerTop = useMemo(() => {\n    if (floating) {\n      return Animated.diffClamp(\n        Animated.multiply(heightAnim, -1),\n        minHeaderHeight - maxHeaderHeight,\n        0\n      );\n    }\n\n    return heightAnim.interpolate({\n      inputRange: [-offset, maxHeaderHeight - minHeaderHeight - offset],\n      outputRange: [0, -(maxHeaderHeight - minHeaderHeight)],\n      extrapolate: 'clamp',\n    });\n  }, [floating, offset, maxHeaderHeight, minHeaderHeight, heightAnim]);\n\n  const contentInset = useMemo(\n    () => ({ top: maxHeaderHeight }),\n    [maxHeaderHeight]\n  );\n  const contentOffset = useMemo(\n    () => ({\n      x: 0,\n      y: -offset,\n    }),\n    [offset]\n  );\n\n  const handleScroll = useCallback(\n    (event: NativeSyntheticEvent<NativeScrollEvent>) => {\n      Animated.event([{ nativeEvent: { contentOffset: { y: heightAnim } } }], {\n        useNativeDriver: false,\n        listener: (event: NativeSyntheticEvent<NativeScrollEvent>) => {\n          if (floating) {\n            const offsetY = event.nativeEvent.contentOffset.y;\n            if (offsetY < -maxHeaderHeight) {\n              heightAnim.extractOffset();\n            }\n          }\n        },\n      })(event);\n\n      onScroll?.(event);\n    },\n    [onScroll, heightAnim, maxHeaderHeight, floating]\n  );\n\n  return {\n    headerTop,\n    contentInset,\n    contentOffset,\n    handleScroll,\n  };\n};\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,MAA/B,QAA6C,OAA7C;AACA,SACEC,QADF,EAIEC,QAJF,QAKO,cALP;AAcA,OAAO,MAAMC,kBAAkB,GAAG,QAKpB;EAAA,IALqB;IACjCC,eADiC;IAEjCC,eAFiC;IAGjCC,QAHiC;IAIjCC,QAAQ,GAAG;EAJsB,CAKrB;EACZ,MAAMC,UAAU,GAAGR,MAAM,CAAC,IAAIC,QAAQ,CAACQ,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,OAAjD;EACA,MAAMC,MAAM,GAAGT,QAAQ,CAACU,EAAT,KAAgB,KAAhB,GAAwBR,eAAxB,GAA0C,CAAzD;EAEA,MAAMS,SAAS,GAAGd,OAAO,CAAC,MAAM;IAC9B,IAAIQ,QAAJ,EAAc;MACZ,OAAON,QAAQ,CAACa,SAAT,CACLb,QAAQ,CAACc,QAAT,CAAkBP,UAAlB,EAA8B,CAAC,CAA/B,CADK,EAELH,eAAe,GAAGD,eAFb,EAGL,CAHK,CAAP;IAKD;;IAED,OAAOI,UAAU,CAACQ,WAAX,CAAuB;MAC5BC,UAAU,EAAE,CAAC,CAACN,MAAF,EAAUP,eAAe,GAAGC,eAAlB,GAAoCM,MAA9C,CADgB;MAE5BO,WAAW,EAAE,CAAC,CAAD,EAAI,EAAEd,eAAe,GAAGC,eAApB,CAAJ,CAFe;MAG5Bc,WAAW,EAAE;IAHe,CAAvB,CAAP;EAKD,CAdwB,EActB,CAACZ,QAAD,EAAWI,MAAX,EAAmBP,eAAnB,EAAoCC,eAApC,EAAqDG,UAArD,CAdsB,CAAzB;EAgBA,MAAMY,YAAY,GAAGrB,OAAO,CAC1B,OAAO;IAAEsB,GAAG,EAAEjB;EAAP,CAAP,CAD0B,EAE1B,CAACA,eAAD,CAF0B,CAA5B;EAIA,MAAMkB,aAAa,GAAGvB,OAAO,CAC3B,OAAO;IACLwB,CAAC,EAAE,CADE;IAELC,CAAC,EAAE,CAACb;EAFC,CAAP,CAD2B,EAK3B,CAACA,MAAD,CAL2B,CAA7B;EAQA,MAAMc,YAAY,GAAG3B,WAAW,CAC7B4B,KAAD,IAAoD;IAClDzB,QAAQ,CAACyB,KAAT,CAAe,CAAC;MAAEC,WAAW,EAAE;QAAEL,aAAa,EAAE;UAAEE,CAAC,EAAEhB;QAAL;MAAjB;IAAf,CAAD,CAAf,EAAwE;MACtEoB,eAAe,EAAE,KADqD;MAEtEC,QAAQ,EAAGH,KAAD,IAAoD;QAC5D,IAAInB,QAAJ,EAAc;UACZ,MAAMuB,OAAO,GAAGJ,KAAK,CAACC,WAAN,CAAkBL,aAAlB,CAAgCE,CAAhD;;UACA,IAAIM,OAAO,GAAG,CAAC1B,eAAf,EAAgC;YAC9BI,UAAU,CAACuB,aAAX;UACD;QACF;MACF;IATqE,CAAxE,EAUGL,KAVH;IAYApB,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAGoB,KAAH,CAAR;EACD,CAf6B,EAgB9B,CAACpB,QAAD,EAAWE,UAAX,EAAuBJ,eAAvB,EAAwCG,QAAxC,CAhB8B,CAAhC;EAmBA,OAAO;IACLM,SADK;IAELO,YAFK;IAGLE,aAHK;IAILG;EAJK,CAAP;AAMD,CA9DM"}