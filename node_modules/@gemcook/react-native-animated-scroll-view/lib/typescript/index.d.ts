/// <reference types="react" />
export declare const ScrollView: ({ AnimationHeaderComponent, animationHeaderStyle, scrollViewRef, maxHeaderHeight, minHeaderHeight, contentContainerStyle, onScroll, scrollEventThrottle, children, floating, ...scrollViewProps }: {
    scrollViewRef?: import("react").RefObject<import("react-native").ScrollView> | undefined;
    children?: import("react").ReactNode;
} & import("./AnimatedScrollView/types").ExpandAnimationType & import("react-native").ScrollViewProps) => JSX.Element;
export declare const FlatList: <ListType>({ AnimationHeaderComponent, animationHeaderStyle, flatListRef, maxHeaderHeight, minHeaderHeight, contentContainerStyle, onScroll, scrollEventThrottle, progressViewOffset, floating, ...flatListProps }: {
    flatListRef?: import("react").RefObject<import("react-native").FlatList<any>> | undefined;
} & import("./AnimatedScrollView/types").ExpandAnimationType & import("react-native").FlatListProps<ListType>) => JSX.Element;
export declare const SectionList: <ListType>({ AnimationHeaderComponent, animationHeaderStyle, sectionListRef, maxHeaderHeight, minHeaderHeight, contentContainerStyle, onScroll, scrollEventThrottle, progressViewOffset, floating, ...sectionListProps }: {
    sectionListRef?: import("react").RefObject<import("react-native").SectionList<any, import("react-native").DefaultSectionT>> | undefined;
} & import("./AnimatedScrollView/types").ExpandAnimationType & import("react-native").SectionListProps<ListType, import("react-native").DefaultSectionT>) => JSX.Element;
